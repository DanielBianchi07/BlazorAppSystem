// <auto-generated />
using System;
using BlazorApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240605204023_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlunoEmpresa", b =>
                {
                    b.Property<Guid>("AlunosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlunosId", "EmpresasId");

                    b.HasIndex("EmpresasId");

                    b.ToTable("AlunoEmpresa");
                });

            modelBuilder.Entity("AlunoTreinamento", b =>
                {
                    b.Property<Guid>("AlunosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TreinamentosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlunosId", "TreinamentosId");

                    b.HasIndex("TreinamentosId");

                    b.ToTable("AlunoTreinamento");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Alternativa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Resposta")
                        .HasColumnType("SMALLINT");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Alternativa", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Assinatura")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Aluno", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Certificado", b =>
                {
                    b.Property<Guid>("TreinamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioCertificado")
                        .HasColumnType("datetime2");

                    b.Property<short>("Situacao")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TreinamentoId", "Codigo");

                    b.ToTable("Certificado", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.ConteudoProgramatico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<short>("CargaHoraria")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("ConteudoProgramatico", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("CargaHorariaInicial")
                        .HasColumnType("SMALLINT");

                    b.Property<short>("CargaHorariaPeriodico")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Validade")
                        .HasColumnType("SMALLINT");

                    b.HasKey("Id");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("NVARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.EnderecoEmpresa", b =>
                {
                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Complemento")
                        .HasMaxLength(160)
                        .HasColumnType("NVARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NomeRua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("VARCHAR");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmpresaId");

                    b.ToTable("EnderecoEmpresa", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Instrutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Assinatura")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Especializacao")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Instrutor", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.ListaPresenca", b =>
                {
                    b.Property<Guid>("TreinamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioTreinamento")
                        .HasColumnType("datetime2");

                    b.Property<short>("Situacao")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TreinamentoId");

                    b.ToTable("ListaPresenca", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Prova", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Prova", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Questao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProvaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvaId");

                    b.ToTable("Questao", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.TelefoneEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NroTelefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("TelefoneEmpresa", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Treinamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<short>("Situacao")
                        .HasColumnType("SMALLINT");

                    b.Property<short>("Status")
                        .HasColumnType("SMALLINT");

                    b.Property<short>("Tipo")
                        .HasColumnType("SMALLINT");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Treinamento", (string)null);
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<short>("IsAdmin")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("EmpresaTreinamento", b =>
                {
                    b.Property<Guid>("EmpresasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TreinamentosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmpresasId", "TreinamentosId");

                    b.HasIndex("TreinamentosId");

                    b.ToTable("EmpresaTreinamento");
                });

            modelBuilder.Entity("InstrutorTreinamento", b =>
                {
                    b.Property<Guid>("InstrutoresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TreinamentosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstrutoresId", "TreinamentosId");

                    b.HasIndex("TreinamentosId");

                    b.ToTable("InstrutorTreinamento");
                });

            modelBuilder.Entity("AlunoEmpresa", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp.Shared.Models.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlunoTreinamento", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp.Shared.Models.Treinamento", null)
                        .WithMany()
                        .HasForeignKey("TreinamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Alternativa", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Questao", "Questao")
                        .WithMany("Alternativas")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Certificado", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Treinamento", "Treinamento")
                        .WithMany("Certificados")
                        .HasForeignKey("TreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treinamento");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.ConteudoProgramatico", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Curso", "Curso")
                        .WithMany("ConteudosProgramaticos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.EnderecoEmpresa", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Empresa", "Empresa")
                        .WithOne("EnderecoEmpresa")
                        .HasForeignKey("BlazorApp.Shared.Models.EnderecoEmpresa", "EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.ListaPresenca", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Treinamento", "Treinamento")
                        .WithOne("ListaPresenca")
                        .HasForeignKey("BlazorApp.Shared.Models.ListaPresenca", "TreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treinamento");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Prova", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Curso", "Curso")
                        .WithMany("Provas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Questao", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Prova", "Prova")
                        .WithMany("Questoes")
                        .HasForeignKey("ProvaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prova");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.TelefoneEmpresa", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Empresa", "Empresa")
                        .WithMany("TelefonesEmpresa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Treinamento", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Curso", "Curso")
                        .WithMany("Treinamentos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("EmpresaTreinamento", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp.Shared.Models.Treinamento", null)
                        .WithMany()
                        .HasForeignKey("TreinamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InstrutorTreinamento", b =>
                {
                    b.HasOne("BlazorApp.Shared.Models.Instrutor", null)
                        .WithMany()
                        .HasForeignKey("InstrutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp.Shared.Models.Treinamento", null)
                        .WithMany()
                        .HasForeignKey("TreinamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Curso", b =>
                {
                    b.Navigation("ConteudosProgramaticos");

                    b.Navigation("Provas");

                    b.Navigation("Treinamentos");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Empresa", b =>
                {
                    b.Navigation("EnderecoEmpresa")
                        .IsRequired();

                    b.Navigation("TelefonesEmpresa");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Prova", b =>
                {
                    b.Navigation("Questoes");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Questao", b =>
                {
                    b.Navigation("Alternativas");
                });

            modelBuilder.Entity("BlazorApp.Shared.Models.Treinamento", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("ListaPresenca")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
